$date
	Thu Oct 23 15:34:06 2014
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module comp2 $end
$var wire 32 ! a [31:0] $end
$var wire 32 " b [31:0] $end
$var reg 1 # isEq $end
$upscope $end
$scope module muj_obvod $end
$var wire 1 $ a $end
$var wire 1 % b $end
$var wire 1 & c $end
$var wire 1 ' d $end
$var wire 1 ( e $end
$upscope $end
$scope module multAx4 $end
$var wire 32 ) a [31:0] $end
$var reg 32 * e [31:0] $end
$var reg 1 + isZero $end
$upscope $end
$scope module mux2 $end
$var wire 32 , a [31:0] $end
$var wire 32 - b [31:0] $end
$var wire 1 . x $end
$var reg 32 / e [31:0] $end
$upscope $end
$scope module mux3 $end
$var wire 32 0 a [31:0] $end
$var wire 32 1 b [31:0] $end
$var wire 32 2 c [31:0] $end
$var wire 2 3 x [1:0] $end
$var reg 32 4 e [31:0] $end
$upscope $end
$scope module muxCv $end
$var wire 1 5 a $end
$var wire 1 6 b $end
$var wire 1 7 c $end
$var wire 1 8 d $end
$var reg 1 9 e $end
$upscope $end
$scope module register32 $end
$var wire 32 : a [31:0] $end
$var wire 1 ; clk $end
$var wire 1 < en $end
$var wire 1 = rs $end
$var reg 32 > e [31:0] $end
$upscope $end
$scope module signExt16t32 $end
$var wire 16 ? a [15:0] $end
$var reg 32 @ e [31:0] $end
$upscope $end
$scope module sum32 $end
$var wire 32 A a [31:0] $end
$var wire 32 B b [31:0] $end
$var reg 32 C e [31:0] $end
$var reg 1 D isZero $end
$var reg 1 E overflow $end
$upscope $end
$scope module test $end
$var wire 5 F alu1r [4:0] $end
$var wire 5 G alu2r [4:0] $end
$var wire 32 H apc [31:0] $end
$var wire 32 I cpyData1 [31:0] $end
$var wire 32 J cpyData2 [31:0] $end
$var wire 32 K cpyData3 [31:0] $end
$var wire 32 L cpyData4 [31:0] $end
$var wire 32 M data1 [31:0] $end
$var wire 32 N data2 [31:0] $end
$var wire 32 O data5 [31:0] $end
$var wire 32 P data6 [31:0] $end
$var wire 32 Q dataX [31:0] $end
$var wire 32 R dataY [31:0] $end
$var wire 1 S en1 $end
$var wire 1 T en2 $end
$var wire 1 U enalu2 $end
$var wire 1 V enalu2reg $end
$var wire 32 W ipc [31:0] $end
$var wire 32 X mempc [31:0] $end
$var wire 32 Y opc [31:0] $end
$var wire 5 Z r1 [4:0] $end
$var wire 5 [ r2 [4:0] $end
$var wire 5 \ r3 [4:0] $end
$var wire 32 ] reg1 [31:0] $end
$var wire 32 ^ reg2 [31:0] $end
$var wire 32 _ reg3 [31:0] $end
$var wire 32 ` reg4 [31:0] $end
$var wire 32 a reg5 [31:0] $end
$var wire 32 b reg6 [31:0] $end
$var wire 5 c s1 [4:0] $end
$var wire 5 d s2 [4:0] $end
$var wire 5 e s3 [4:0] $end
$var wire 32 f xpc [31:0] $end
$var reg 1 g clk $end
$var reg 1 h clk2 $end
$scope module RAM $end
$var wire 1 i clk $end
$var wire 32 j pcaddr [31:0] $end
$var reg 32 k e [31:0] $end
$var reg 32 l f [31:0] $end
$upscope $end
$scope module DEC $end
$var wire 1 i clk $end
$var wire 32 m i1 [31:0] $end
$var wire 32 n i2 [31:0] $end
$var reg 5 o addr2reg1 [4:0] $end
$var reg 5 p addr2reg2 [4:0] $end
$var reg 5 q addr2reg3 [4:0] $end
$var reg 5 r addrreg1 [4:0] $end
$var reg 5 s addrreg2 [4:0] $end
$var reg 5 t addrreg3 [4:0] $end
$var reg 32 u e [31:0] $end
$var reg 1 v en_alu2 $end
$var reg 32 w f [31:0] $end
$upscope $end
$scope module REGS $end
$var wire 5 x a [4:0] $end
$var wire 5 y b [4:0] $end
$var wire 5 z c [4:0] $end
$var wire 1 i clk $end
$var wire 5 { d [4:0] $end
$var wire 5 | e [4:0] $end
$var wire 5 } f [4:0] $end
$var wire 32 ~ ins1 [31:0] $end
$var wire 32 !" ins2 [31:0] $end
$var wire 32 "" w1 [31:0] $end
$var wire 5 #" w1addr [4:0] $end
$var wire 32 $" w2 [31:0] $end
$var wire 5 %" w2addr [4:0] $end
$var reg 32 &" a1 [31:0] $end
$var reg 32 '" a2 [31:0] $end
$var reg 32 (" a3 [31:0] $end
$var reg 1 )" alu2_en $end
$var reg 32 *" b1 [31:0] $end
$var reg 32 +" b2 [31:0] $end
$var reg 32 ," b3 [31:0] $end
$var reg 32 -" inso1 [31:0] $end
$var reg 32 ." inso2 [31:0] $end
$upscope $end
$scope module a1 $end
$var wire 32 /" a [31:0] $end
$var wire 1 0" aluNum $end
$var wire 1 i clk $end
$var wire 1 1" en_dec $end
$var wire 1 2" en_reg $end
$var wire 32 3" ipc [31:0] $end
$var wire 32 4" r1 [31:0] $end
$var wire 32 5" r2 [31:0] $end
$var wire 32 6" r3 [31:0] $end
$var reg 5 7" d [4:0] $end
$var reg 32 8" data [31:0] $end
$var reg 1 9" eno $end
$var reg 32 :" pc [31:0] $end
$upscope $end
$scope module a2 $end
$var wire 32 ;" a [31:0] $end
$var wire 1 <" aluNum $end
$var wire 1 i clk $end
$var wire 1 V en_dec $end
$var wire 1 U en_reg $end
$var wire 32 =" ipc [31:0] $end
$var wire 32 >" r1 [31:0] $end
$var wire 32 ?" r2 [31:0] $end
$var wire 32 @" r3 [31:0] $end
$var reg 5 A" d [4:0] $end
$var reg 32 B" data [31:0] $end
$var reg 1 C" eno $end
$var reg 32 D" pc [31:0] $end
$upscope $end
$scope module MEM $end
$var wire 32 E" a [31:0] $end
$var wire 32 F" b [31:0] $end
$var wire 1 i clk $end
$var wire 32 G" r1 [31:0] $end
$var wire 32 H" r2 [31:0] $end
$var wire 32 I" r21 [31:0] $end
$var wire 32 J" r22 [31:0] $end
$var wire 32 K" r23 [31:0] $end
$var wire 32 L" r3 [31:0] $end
$var reg 32 M" data1 [31:0] $end
$var reg 32 N" data2 [31:0] $end
$var reg 5 O" e [4:0] $end
$var reg 5 P" f [4:0] $end
$upscope $end
$scope module PC $end
$var wire 1 T alu2_en $end
$var wire 1 i clk $end
$var wire 32 Q" pc [31:0] $end
$var reg 32 R" outputpc [31:0] $end
$upscope $end
$scope module apc2 $end
$var wire 1 S" alu2_en $end
$var wire 1 i clk $end
$var wire 32 T" pc [31:0] $end
$var reg 32 U" outputpc [31:0] $end
$upscope $end
$scope module amem2 $end
$var wire 1 i clk $end
$var wire 32 V" pcaddr [31:0] $end
$var reg 32 W" e [31:0] $end
$var reg 32 X" f [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1000101011001111000001000101001 X"
b1000101011001111000001000101001 W"
b0 V"
b0 U"
b0 T"
0S"
b0 R"
b0 Q"
bx P"
bx O"
bx N"
bx M"
bx L"
bx K"
bx J"
bx I"
bx H"
bx G"
bx F"
bx E"
b0 D"
0C"
bx B"
bx A"
bx @"
bx ?"
bx >"
bz ="
1<"
bx ;"
b0 :"
09"
bx 8"
bx 7"
bx 6"
bx 5"
bx 4"
bz 3"
12"
11"
00"
bx /"
bx ."
bx -"
bx ,"
bx +"
bx *"
x)"
bx ("
bx '"
bx &"
bx %"
bx $"
bx #"
bx ""
bx !"
bx ~
bx }
bx |
bx {
bx z
bx y
bx x
bx w
xv
bx u
bx t
bx s
bx r
bx q
bx p
bx o
b1000101011001111000001000101001 n
b1000101011001111000001000101001 m
b1000101011001111000001000101001 l
b1000101011001111000001000101001 k
b0 j
0i
0h
0g
b0 f
bx e
bx d
bx c
bx b
bx a
bx `
bx _
bx ^
bx ]
bx \
bx [
bx Z
bz Y
b0 X
b0 W
xV
xU
0T
0S
b1000101011001111000001000101001 R
b1000101011001111000001000101001 Q
bx P
bx O
b1000101011001111000001000101001 N
b1000101011001111000001000101001 M
bx L
bx K
bx J
bx I
b0 H
bx G
bx F
0E
0D
bx C
bz B
bz A
bz0000000000000000zzzzzzzzzzzzzzz @
bz ?
bx >
z=
z<
z;
bz :
x9
z8
z7
z6
z5
bz 4
bz 3
bz 2
bz 1
bz 0
bz /
z.
bz -
bz ,
0+
bx *
bz )
x(
x'
z&
z%
z$
0#
bz "
bz !
$end
#10
b10010001101000101011001111000 l
b10010001101000101011001111000 N
b10010001101000101011001111000 n
b10010001101000101011001111000 k
b10010001101000101011001111000 M
b10010001101000101011001111000 m
b10010001101000101011001111000 X"
b10010001101000101011001111000 R
b10010001101000101011001111000 W"
b10010001101000101011001111000 Q
1v
1U
b1000101011001111000001000101001 w
b1000101011001111000001000101001 J
b1000101011001111000001000101001 !"
b1000101011001111000001000101001 u
b1000101011001111000001000101001 I
b1000101011001111000001000101001 ~
b10000 q
b10000 e
b10000 }
b111 p
b111 d
b111 |
b1011 o
b1011 c
b1011 {
b10000 t
b10000 \
b10000 z
b111 s
b111 [
b111 y
b1011 r
b1011 Z
b1011 x
1)"
1V
bz :"
bz W
19"
1S
b0 8"
b0 O
b0 ""
b0 7"
b0 F
b0 #"
bz D"
bz f
xC"
xT
b0 B"
b0 P
b0 $"
b0 A"
b0 G
b0 %"
bz N"
bz M"
bz P"
bz O"
b1 R"
b1 X
b1 j
b1 Q"
b1 U"
b1 H
b1 T"
b1 V"
1h
1g
1i
#20
0h
0g
0i
#30
bx X"
bx R
bx W"
bx Q
bx l
bx N
bx n
bx k
bx M
bx m
b10 U"
b10 H
b10 T"
b10 V"
b10 R"
b10 X
b10 j
b10 Q"
0C"
0T
0)"
0V
b111 ,"
b111 b
b111 @"
b111 K"
b111 ("
b111 _
b111 6"
b111 L"
b10010001101000101011001111000 ."
b10010001101000101011001111000 L
b10010001101000101011001111000 ;"
b10010001101000101011001111000 F"
b10010001101000101011001111000 -"
b10010001101000101011001111000 K
b10010001101000101011001111000 /"
b10010001101000101011001111000 E"
0v
0U
b10010001101000101011001111000 w
b10010001101000101011001111000 J
b10010001101000101011001111000 !"
b10010001101000101011001111000 u
b10010001101000101011001111000 I
b10010001101000101011001111000 ~
b1010 q
b1010 e
b1010 }
b10100 p
b10100 d
b10100 |
b10001 o
b10001 c
b10001 {
b1010 t
b1010 \
b1010 z
b10100 s
b10100 [
b10100 y
b10001 r
b10001 Z
b10001 x
1h
1g
1i
#40
0h
0g
0i
#50
1v
1U
bx w
bx J
bx !"
bx u
bx I
bx ~
bx q
bx e
bx }
bx p
bx d
bx |
bx o
bx c
bx {
bx t
bx \
bx z
bx s
bx [
bx y
bx r
bx Z
bx x
b11 R"
b11 X
b11 j
b11 Q"
b11 U"
b11 H
b11 T"
b11 V"
1h
1g
1i
#60
0h
0g
0i
#70
b100 U"
b100 H
b100 T"
b100 V"
b101 R"
b101 X
b101 j
b101 Q"
1C"
1T
1)"
1V
bx ,"
bx b
bx @"
bx K"
bx ("
bx _
bx 6"
bx L"
bx ."
bx L
bx ;"
bx F"
bx -"
bx K
bx /"
bx E"
1h
1g
1i
#80
0h
0g
0i
#90
b111 R"
b111 X
b111 j
b111 Q"
b101 U"
b101 H
b101 T"
b101 V"
1h
1g
1i
#100
0h
0g
0i
#110
b110 U"
b110 H
b110 T"
b110 V"
b1001 R"
b1001 X
b1001 j
b1001 Q"
1h
1g
1i
#120
0h
0g
0i
#130
b1011 R"
b1011 X
b1011 j
b1011 Q"
b111 U"
b111 H
b111 T"
b111 V"
1h
1g
1i
#140
0h
0g
0i
#150
b1000 U"
b1000 H
b1000 T"
b1000 V"
b1101 R"
b1101 X
b1101 j
b1101 Q"
1h
1g
1i
#160
0h
0g
0i
#170
b1111 R"
b1111 X
b1111 j
b1111 Q"
b1001 U"
b1001 H
b1001 T"
b1001 V"
1h
1g
1i
#180
0h
0g
0i
#190
b1010 U"
b1010 H
b1010 T"
b1010 V"
b10001 R"
b10001 X
b10001 j
b10001 Q"
1h
1g
1i
#200
0h
0g
0i
#210
b10011 R"
b10011 X
b10011 j
b10011 Q"
b1011 U"
b1011 H
b1011 T"
b1011 V"
1h
1g
1i
#220
0h
0g
0i
#230
b1100 U"
b1100 H
b1100 T"
b1100 V"
b10101 R"
b10101 X
b10101 j
b10101 Q"
1h
1g
1i
#240
0h
0g
0i
#250
b10111 R"
b10111 X
b10111 j
b10111 Q"
b1101 U"
b1101 H
b1101 T"
b1101 V"
1h
1g
1i
#260
0h
0g
0i
#270
b1110 U"
b1110 H
b1110 T"
b1110 V"
b11001 R"
b11001 X
b11001 j
b11001 Q"
1h
1g
1i
#280
0h
0g
0i
#290
b11011 R"
b11011 X
b11011 j
b11011 Q"
b1111 U"
b1111 H
b1111 T"
b1111 V"
1h
1g
1i
#300
0h
0g
0i
#310
b10000 U"
b10000 H
b10000 T"
b10000 V"
b11101 R"
b11101 X
b11101 j
b11101 Q"
1h
1g
1i
#320
0h
0g
0i
